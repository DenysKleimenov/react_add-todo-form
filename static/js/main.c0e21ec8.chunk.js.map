{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getCorrectId","Math","max","getUserById","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","setTitle","titleError","setTitleError","todoUserId","setTodoUserId","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","trimTitle","trim","newTodo","currentTodos","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0e21ec8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\n\nimport { TodoWithUser } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={`${id}`}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoWithUser } from '../../react-app-env';\n\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nimport { TodoWithUser } from './react-app-env';\n\nconst getCorrectId = (todos: TodoWithUser[]) => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n\nconst getUserById = (userId: number) => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todosWithUser: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>(todosWithUser);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [todoUserId, setTodoUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setTodoUserId(0);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodoUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const trimTitle = title.trim();\n\n    setTitleError(!trimTitle);\n    setUserIdError(!todoUserId);\n\n    if (!trimTitle || !todoUserId) {\n      return;\n    }\n\n    const newTodo = {\n      id: getCorrectId(todos),\n      title,\n      userId: todoUserId,\n      completed: false,\n      user: getUserById(todoUserId),\n    };\n\n    if (!titleError && !userIdError) {\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n    }\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              value={title}\n              onChange={handleInput}\n              placeholder=\"Enter a title\"\n            />\n            {titleError\n              && <span className=\"error\">Please enter a title</span>}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              name=\"todoUserId\"\n              value={todoUserId}\n              onChange={handleSelect}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {userIdError\n              && <span className=\"error\">Please choose a user</span>}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}